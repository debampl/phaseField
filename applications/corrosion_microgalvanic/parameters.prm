# =================================================================================
# Set the number of dimensions (2 or 3 for a 2D or 3D calculation)
# =================================================================================
set Number of dimensions = 2

# =================================================================================
# Set the length of the domain in all three dimensions
# (Domain size Z ignored in 2D)
# =================================================================================
# Each axes spans from zero to the specified length Unit: m
set Domain size X = 1e-6
set Domain size Y = 1e-6

# =================================================================================
# Set the element parameters
# =================================================================================
# The number of elements in each direction is 2^(refineFactor) * subdivisions
# Subdivisions Z ignored in 2D
# For optimal performance, use refineFactor primarily to determine the element size
set Subdivisions X = 4
set Subdivisions Y = 4

set Refine factor = 5

# Set the polynomial degree of the element (allowed values: 1, 2, or 3)
set Element degree = 1

# =================================================================================
# Set the adaptive mesh refinement parameters
# =================================================================================
# Set the flag determining if adaptive meshing is activated
set Mesh adaptivity = true

# Set the maximum and minimum level of refinement
# When adaptive meshing is enabled, the refine factor set in the block above is
# only used to generate the first pass of the mesh as the initial conditions are
# applied. It should be set somewhere between the max and min levels below.

# Set the maximum and minimum level of refinement
set Max refinement level = 6 
set Min refinement level = 2

# Set the criteria for adapting the mesh

subsection Refinement criterion: psi
# Select whether the mesh is refined based on the variable value (VALUE),
# its gradient (GRADIENT), or both (VALUE_AND_GRADIENT)
set Criterion type = VALUE
# Set the lower and upper bounds for the value-based refinement window
set Value lower bound = 1e-3
set Value upper bound = 0.999
end

subsection Refinement criterion: nAnodic
set Criterion type = VALUE
set Value lower bound = 1e-3
set Value upper bound = 0.999
end

subsection Refinement criterion: nCathodic
set Criterion type = VALUE
set Value lower bound = 1e-3
set Value upper bound = 0.999
end

# Set the number of time steps between remeshing operations
set Steps between remeshing operations = 2000
# =================================================================================
# Set the time step parameters
# =================================================================================
# The size of the time step
set Time step = 0.01

# The simulation ends when either the number of time steps is reached or the
# simulation time is reached.
# set Number of time steps = 1000

set Simulation end time = 400

# =================================================================================
# Set the linear solver parameters
# =================================================================================

subsection Linear solver parameters: Phi
	# Whether the tolerance value is compared to the residual (ABSOLUTE_RESIDUAL)
	# or the change in the residual (RELATIVE_RESIDUAL_CHANGE)
	set Tolerance type = ABSOLUTE_RESIDUAL
	#set Tolerance type = RELATIVE_RESIDUAL_CHANGE

	# The tolerance for convergence (L2 norm)
  	
	set Tolerance value = 1.0e-7

	# The maximum number of linear solver iterations per solve
	set Maximum linear solver iterations = 1000000
end

# =================================================================================
# Set the nonlinear solver parameters
# =================================================================================

set Maximum nonlinear solver iterations = 1000

subsection Nonlinear solver parameters: Phi
    set Tolerance type = ABSOLUTE_SOLUTION_CHANGE
    set Tolerance value = 1.0e-10
    set Use backtracking line search damping = false
    set Constant damping value = 0.3
    set Use Laplace's equation to determine the initial guess = true
end

# =================================================================================
# Set the boundary conditions
# =================================================================================
# Set the boundary condition for each variable, where each variable is given by
# its name, as defined in equations.h. The four boundary condition
# types are NATURAL, DIRICHLET, NON_UNIFORM_DIRICHLET and NATURAL. If all
# of the boundaries have the same boundary condition, only one boundary condition
# type needs to be given. If multiple boundary condition types are needed, give a
# comma-separated list of the types. The order is the miniumum of x, maximum of x,
# minimum of y, maximum of y, minimum of z, maximum of z (i.e left, right, bottom,
# top in 2D and left, right, bottom, top, front, back in 3D). The value of a
# Dirichlet BC is specfied in the following way -- DIRCHILET: val -- where 'val' is
# the desired value. If the boundary condition is NON_UNIFORM_DIRICHLET, the
# boundary condition should be specified in the appropriate function in 'ICs_and_BCs.h'.
# Example 1: All periodic BCs for variable 'c'
# set Boundary condition for variable c = NATURAL
# Example 2: Zero-derivative BCs on the left and right, Dirichlet BCs with value
# 1.5 on the top and bottom for variable 'n' in 2D
# set Boundary condition for variable n = NATURAL, NON_UNIFORM_DIRICHLET, DIRICHLET: 1.5, DIRICHLET: 1.5

set Boundary condition for variable nAnodic = NATURAL
set Boundary condition for variable muAnodic = NATURAL
set Boundary condition for variable nCathodic = NATURAL
set Boundary condition for variable muCathodic = NATURAL
set Boundary condition for variable psi = NATURAL
set Boundary condition for variable mupsi = NATURAL
set Boundary condition for variable Phi = NATURAL
set Boundary condition for variable irxn = NATURAL
set Boundary condition for variable xiAnodic = NATURAL

# =================================================================================
# Set the output parameters
# =================================================================================
# Type of spacing between outputs ("EQUAL_SPACING", "LOG_SPACING", "N_PER_DECADE",
# or "LIST")
set Output condition = EQUAL_SPACING


# Number of times the program outputs the fields (total number for "EQUAL_SPACING"
# and "LOG_SPACING", number per decade for "N_PER_DECADE", ignored for "LIST")
#set Number of outputs = 100
set Number of outputs = 20

# The number of time steps between updates being printed to the screen
set Skip print steps = 1000

# =================================================================================
# Set the checkpoint/restart parameters
# =================================================================================
# Whether to start this simulation from the checkpoint of a previous simulation
#set Load from a checkpoint = true
set Load from a checkpoint = false

# Type of spacing between checkpoints ("EQUAL_SPACING", "LOG_SPACING", "N_PER_DECADE",
# or "LIST")
set Checkpoint condition = EQUAL_SPACING

# Number of times the creates checkpoints (total number for "EQUAL_SPACING"
# and "LOG_SPACING", number per decade for "N_PER_DECADE", ignored for "LIST")
set Number of checkpoints = 5

# =================================================================================
# Set the model constants
# =================================================================================
# Set the user-defined model constants, which must have a counter-part given in
# customPDE.h. These are most often used in the residual equations in equations.h,
# but may also be used for initial conditions and nucleation calculations. The type
# options currently are DOUBLE, INT, BOOL, TENSOR, and [symmetry] ELASTIC CONSTANTS
# where [symmetry] is ISOTROPIC, TRANSVERSE, ORTHOTROPIC, or ANISOTROPIC.
# For this application all units are SI

#The dissolving metal cation molar volume (m^3/mol)
set Model constant VMV= 1.3736e-5, DOUBLE

# The dissolving metal cation charge number
set Model constant zMV = 2.0, DOUBLE

# The gradient energy coefficient, epsilon^2
# (divided by the bulk energy coefficient, W)
set Model constant epssqV = 0.31e-16, DOUBLE

# Corrosion potential for Anodic, V
set Model constant EcorrAnodic = -1.424, DOUBLE

# Corrosion potential for Cathodic, V
set Model constant EcorrCathodic = -1.151, DOUBLE

# Tafel slope for Anodic Unit: V
set Model constant AAnodic = 0.003474, DOUBLE

# Tafel slope for Cathodic Unit: V
set Model constant ACathodic = -0.03626, DOUBLE

# Corrosion current density for Anodic, A/m^2
set Model constant i0Anodic = 0.081, DOUBLE

# Corrosion current density for Cathodic, A/m^2
set Model constant i0Cathodic = 0.017, DOUBLE

# Applied potential (V)
set Model constant VsV = 0.0, DOUBLE

# Safety factor for domain parameter to avoid division by zero
set Model constant lthresh = 1.0e-3, DOUBLE

# Constant gamma for bulk free energy (equal to 3/2)
set Model constant gamma = 1.5, DOUBLE

# variable KAPPA for electrolyte conductivity in comsol S/m
set Model constant kappa = 0.001, DOUBLE

# Limitation of anodic current density A/m^2
set Model constant iMax = 100.0, DOUBLE

# Time step at which velocity is switched on
set Model constant tStepStartForV = 0000.0, DOUBLE

# Size of beta particle, m
set Model constant cathodeThickness = 0.2e-6, DOUBLE

# initial guess for Phi, V
set Model constant guessValPhi = 1.409, DOUBLE 
 
